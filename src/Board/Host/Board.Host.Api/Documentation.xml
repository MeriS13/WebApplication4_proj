<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Board.Host.Api</name>
    </assembly>
    <members>
        <member name="T:Board.Host.Api.Controllers.AccountController">
            <summary>
            Контроллер для работы с аккаунтами.
            </summary>
        </member>
        <member name="M:Board.Host.Api.Controllers.AccountController.#ctor(Microsoft.Extensions.Logging.ILogger{Board.Host.Api.Controllers.AccountController},Board.Application.AppData.Contexts.Accounts.Services.IAccountService)">
            <summary>
            Инициализирует экземпляр <see cref="T:Board.Host.Api.Controllers.AccountController"/>
            </summary>
            <param name="logger">Сервис логирования.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.AccountController.RegisterAccount(Board.Contracts.Accounts.CreateAccountDto,System.Threading.CancellationToken)">
            <summary>
            Зарегистрировать новый аккаунт.
            </summary>
            <param name="dto">Модель регистрации аккаунта.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Модель зарегистрированного аккаунта.</returns>
            <response code="201"> Пользователь зарегестрирован. </response>
            <response code="400"> Введенные данные содержат запрещенные слова. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.AccountController.Login(Board.Contracts.Accounts.LoginAccountDto,System.Threading.CancellationToken)">
            <summary>
            Войти в аккаунт.
            </summary>
            <param name="dto">Модель входа в аккаунт.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Модель с данными входа.</returns>
            <response code="200"> Аутентификация прошла успешно. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.AccountController.GetUserInfo(System.Threading.CancellationToken)">
            <summary>
            Получить информацию о текущем пользователе
            </summary>
            <param name="cancellation">Токен отмены.</param>
            <returns> Модель аккаунта </returns>
            <response code="200"> Информация об аккаунте. </response>
            <response code="401"> Пользователь не авторизован. </response>
        </member>
        <member name="T:Board.Host.Api.Controllers.CategoryController">
            <summary>
            Контроллер для работы с категориями
            </summary>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Получить список категорий.
            </summary>
            <param name="cancellationToken"> Токен отмены операции. </param>
            <returns> Список категорий. </returns>
            <response code="200"> Список категорий </response>
            <response code="204"> Нет категорий. </response> 
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить категорию по идентификатору.
            </summary>
            <param name="id"> Идентификатор категории. </param>
            <param name="cancellationToken"> Токен отмены операции. </param>
            <returns> Модель категории. </returns>
            <response code="200"> Модель категории успешно получена. </response>
            <response code="204"> Неверный идентификатор. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.CreateAsync(Board.Contracts.Category.CreateCategoryDto,System.Threading.CancellationToken)">
            <summary>
            Создать новую категорию.
            </summary>
            <param name="dto"> Модель создания категории. </param>
            <param name="cancellationToken"> Токен отмены операции. </param>
            <returns> Идентификатор созданной категории. </returns>
            <response code="201"> категория успешно создана. </response>
            <response code="400"> Категория с таким названием уже существует. </response>
            <response code="403"> Доступно для редактирования только пользователю Admin </response>
            <response code="401"> Пользователь не авторизован. </response> 
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.UpdateAsync(System.Guid,Board.Contracts.Category.UpdateCategoryDto,System.Threading.CancellationToken)">
            <summary>
            Обновить категорию.
            </summary>
            <param name="id"> Идентификатор категории. </param>
            <param name="dto"> Модель обновления категории. </param>
            <param name="cancellationToken"> Токен отмены операции. </param>
            <returns> Модель категории. </returns>
            <response code="200"> Категория успешно обновлена. </response>
            <response code="403"> Доступно для редактирования только пользователю Admin </response>
            <response code="401"> Пользователь не авторизован. </response> 
            <response code="204"> Нет категории или неверный идентификатор. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.DeleteById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить категорию по идентификатору.
            </summary>
            <param name="id"> Идентификатор категории. </param>
            <param name="cancellationToken"> Токен отмены операции. </param>
            <returns> StatusCode </returns>
            <response code="404"> Нет категории с таким идентификатором. </response>
            <response code="403"> Доступно для редактирования только пользователю Admin </response>
            <response code="401"> Пользователь не авторизован. </response> 
            <response code="204"> Успешно удалено. </response> 
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentsController.CreateByPostId(Board.Contracts.Comments.CreateCommentDto,System.Threading.CancellationToken)">
            <summary>
            Добавление комментария к посту по идентификатору поста
            </summary>
            <param name="dto"> Модель комментария </param>
            <param name="cancellationToken"> Токен отмены операции </param>
            <returns> Идентификатор созданного коммента </returns>
            <response code="401"> Пользователь не авторизован. </response>
            <response code="201"> Ответ сохранён. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentsController.DeleteByCommentIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удаление комментария по его идентификатору
            </summary>
            <param name="id"> Идентификатор комментария </param>
            <param name="cancellationToken"> Токен отмены операции </param>
            <returns> Статус код</returns>
            <response code="204"> Комментарий успешно удалено. </response>
            <response code="404"> Нет комментария с введенным идентификатором. </response>
            <response code="403"> Нельзя удалить комментарий другого пользователя. </response>
            <response code="401"> Пользователь не авторизован. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentsController.GetCommentsOnPostById(System.Guid,System.Threading.CancellationToken)">
            <summary>
             Получение списка комментариев к посту по идентификатору поста.
            </summary>
            <param name="postId"> Идентификатор поста. </param>
            <param name="cancellationToken"> Токен отмены операции. </param>
            <returns> Список комментов. </returns>
            <response code="200"> Список комментариев </response>
            <response code="204"> Нет комментариев или неверный идентификатор объявления. </response>
            <response code="401"> Пользователь не авторизован. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentsController.GetCommentsCurrentUser(System.Threading.CancellationToken)">
            <summary>
            Получение комментариев текущего пользователя.
            </summary>
            <param name="cancellationToken"> Токен отмены операции. </param>
            <returns> Список комментариев. </returns>
            <response code="200"> Список комментариев </response>
            <response code="204"> Нет комментариев. </response>
            <response code="401"> Пользователь не авторизован. </response>
        </member>
        <member name="T:Board.Host.Api.Controllers.FileController">
            <summary>
            Контроллер для работы с файлами.
            </summary>
        </member>
        <member name="M:Board.Host.Api.Controllers.FileController.#ctor(Board.Application.AppData.Contexts.Files.Services.IFileService,Microsoft.Extensions.Logging.ILogger{Board.Host.Api.Controllers.FileController})">
            <summary>
            Инициализирует экземпляр <see cref="T:Board.Host.Api.Controllers.FileController"/>
            </summary>
            <param name="fileService">Сервис работы с файлами.</param>
            <param name="logger">Сервис логирования.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.FileController.GetInfoById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получение информации о файле по идентификатору.
            </summary>
            <param name="id">Идентификатор файла.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <returns>Информация о файле.</returns>
            <response code="404"> Нет файла с введенным идентификатором. </response>
            <response code="200"> Информация успешно получена. </response>
            <response code="401"> Пользователь не авторизован. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.FileController.GetAllByPostIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получение списка файлов, относящихся к объявлению по его Id.
            </summary>
            <param name="postId"> Идентификатор объявления.</param>
            <param name="cancellationToken"> Токен отмены. </param>
            <returns> Информация о файле. </returns>
            <response code="404"> Нет файлов или неверный идентификатор. </response>
            <response code="200"> Информация успешно получена. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.FileController.Upload(Microsoft.AspNetCore.Http.IFormFile,System.Guid,System.Threading.CancellationToken)">
            <response code="404"> Нет файлов или неверный идентификатор. </response>
            <response code="401"> Пользователь не авторизован. </response>
            <response code="201"> Файл успешно загружен. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.FileController.Download(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Скачивание файла по идентификатору.
            </summary>
            <param name="id">Идентификатор файла.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <returns>Файл в виде потока.</returns>
            <response code="404"> Нет файла с указанным идентификатором. </response>
            <response code="200"> Файл готов к скачиванию. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.FileController.DeleteAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удаление файла по идентификатору.
            </summary>
            <param name="id">Идентификатор файла.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="204"> Файл успешно удалено. </response>
            <response code="404"> Нет файла с введенным идентификатором. </response>
            <response code="403"> Нельзя удалить файл другого пользователя. </response>
            <response code="401"> Пользователь не авторизован. </response>
        </member>
        <member name="T:Board.Host.Api.Controllers.PostsController">
            <summary>
            Api-контроллер для работы с постами(объявлениями) 
            </summary>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostsController.#ctor(Microsoft.Extensions.Logging.ILogger{Board.Host.Api.Controllers.PostsController},Board.Application.AppData.Contexts.Posts.Services.IPostService)">
            <summary>
            Инициализирует экземпляр <see cref="T:Board.Host.Api.Controllers.PostsController"/>
            </summary>
            <param name="logger">сервис логгирования</param>
            <param name="postService"> сервис для работы с объявлениями</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostsController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Получение списка обьявлений
            </summary>
            <param name="cancellationToken"> Токен отмены операции </param>
            <response code="200"> Список объявлений успешно получен. </response>
            <response code="204"> Список объявлений пуст. </response>
            <returns> Список постов </returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostsController.GetById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить объявление по идентификатору.
            </summary>
            <param name="postId">Идентификатор.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="200"> Объявление успешно получено. </response>
            <response code="204"> Нет объявления с введенным идентификатором. </response>
            <returns>Модель объявления.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostsController.CreatePost(Board.Contracts.Posts.CreatePostDto,System.Threading.CancellationToken)">
            <summary>
             Сохраняет новое объявление 
            </summary>
            <param name="dto"> Модель создания объявления </param>
            <param name="cancellationToken">Токен отмены операции</param>
            <response code="401"> Пользователь не авторизован. </response>
            <response code="201"> Объявление успешно сохранено. </response>
            <returns> Модель созданного объявления </returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostsController.Update(System.Guid,Board.Contracts.Posts.UpdatePostDto,System.Threading.CancellationToken)">
            <summary>
            Обновить объявление.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="dto">Модель обновления объявления.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <returns> Модель обновлённого объявления. </returns>
            <response code="201"> Объявление успешно изменено. </response>
            <response code="404"> Нет объявления с введенным идентификатором. </response>
            <response code="403"> Нельзя редактировать объявление созданное другим пользователем. </response>
            <response code="401"> Пользователь не авторизован. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostsController.DeleteById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удаление объявления по параметру id
            </summary>
            <returns> StatusCode </returns>
            <response code="204"> Объявление успешно удалено. </response>
            <response code="404"> Нет объявления с введенным идентификатором. </response>
            <response code="403"> Нельзя удалить объявление созданное другим пользователем. </response>
            <response code="401"> Пользователь не авторизован. </response>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostsController.GetAllPostsByCategoryId(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить список постов по идентификатору категории.
            </summary>  где-то в сервисе преобразование не происходит
            <param name="CategoryId"> Идентификатор категории </param>
            <param name="cancellationToken"> Токен отмены операции </param>
            <response code="200"> Список объявлений </response>
            <response code="204"> Нет объявлений или неверный идентификатор категории. </response>
            <returns> Список постов </returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostsController.GetUserPostsAsync(System.Threading.CancellationToken)">
            <summary>
            Получить список постов текущего пользователя
            </summary>
            <param name="cancellationToken"></param>
            <returns> Список постов </returns>
            <response code="200"> Список объявлений </response>
            <response code="204"> Нет объявлений или неверный идентификатор родительской категории. </response>
            <response code="401"> Пользователь не авторизован. </response>
        </member>
    </members>
</doc>
